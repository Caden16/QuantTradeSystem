// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: order.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "order.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class QA_Market_orderDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QA_Market_order>
     _instance;
} _QA_Market_order_default_instance_;

namespace protobuf_order_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, datetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, sending_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, transact_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, towards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, strategy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, order_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, amount_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, order_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, trade_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QA_Market_order, status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(QA_Market_order)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_QA_Market_order_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "order.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _QA_Market_order_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QA_Market_order_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013order.proto\"\245\002\n\rQA_Market_order\022\r\n\005price"
      "\030\001 \001(\002\022\014\n\004date\030\002 \001(\t\022\020\n\010datetime\030\003 \001(\t\022\024"
      "\n\014sending_time\030\004 \001(\t\022\025\n\rtransact_time\030\005 "
      "\001(\t\022\016\n\006amount\030\006 \001(\002\022\017\n\007towards\030\007 \001(\003\022\014\n\004"
      "code\030\010 \001(\t\022\014\n\004user\030\t \001(\t\022\020\n\010strategy\030\n \001"
      "(\t\022\014\n\004type\030\013 \001(\t\022\021\n\torder_model\030\014 \001(\t\022\024\n\014a"
      "mount_model\030\r \001(\t\022\020\n\010order_id\030\016 \001(\t\022\020\n\010t"
      "rade_id\030\017 \001(\t\022\016\n\006status\030\020 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 317);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "order.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_order_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QA_Market_order::kPriceFieldNumber;
const int QA_Market_order::kDateFieldNumber;
const int QA_Market_order::kDatetimeFieldNumber;
const int QA_Market_order::kSendingTimeFieldNumber;
const int QA_Market_order::kTransactTimeFieldNumber;
const int QA_Market_order::kAmountFieldNumber;
const int QA_Market_order::kTowardsFieldNumber;
const int QA_Market_order::kCodeFieldNumber;
const int QA_Market_order::kUserFieldNumber;
const int QA_Market_order::kStrategyFieldNumber;
const int QA_Market_order::kTypeFieldNumber;
const int QA_Market_order::kBidModelFieldNumber;
const int QA_Market_order::kAmountModelFieldNumber;
const int QA_Market_order::kOrderIdFieldNumber;
const int QA_Market_order::kTradeIdFieldNumber;
const int QA_Market_order::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QA_Market_order::QA_Market_order()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_order_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:QA_Market_order)
}
QA_Market_order::QA_Market_order(const QA_Market_order& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.date().size() > 0) {
    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  datetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datetime().size() > 0) {
    datetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datetime_);
  }
  sending_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sending_time().size() > 0) {
    sending_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sending_time_);
  }
  transact_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transact_time().size() > 0) {
    transact_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transact_time_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user().size() > 0) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  strategy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strategy().size() > 0) {
    strategy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strategy_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  order_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_model().size() > 0) {
    order_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_model_);
  }
  amount_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.amount_model().size() > 0) {
    amount_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_model_);
  }
  order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_id().size() > 0) {
    order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_id_);
  }
  trade_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trade_id().size() > 0) {
    trade_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trade_id_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&towards_) -
    reinterpret_cast<char*>(&price_)) + sizeof(towards_));
  // @@protoc_insertion_point(copy_constructor:QA_Market_order)
}

void QA_Market_order::SharedCtor() {
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sending_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transact_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strategy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trade_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&towards_) -
      reinterpret_cast<char*>(&price_)) + sizeof(towards_));
  _cached_size_ = 0;
}

QA_Market_order::~QA_Market_order() {
  // @@protoc_insertion_point(destructor:QA_Market_order)
  SharedDtor();
}

void QA_Market_order::SharedDtor() {
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sending_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transact_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strategy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trade_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QA_Market_order::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QA_Market_order::descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QA_Market_order& QA_Market_order::default_instance() {
  protobuf_order_2eproto::InitDefaults();
  return *internal_default_instance();
}

QA_Market_order* QA_Market_order::New(::google::protobuf::Arena* arena) const {
  QA_Market_order* n = new QA_Market_order;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QA_Market_order::Clear() {
// @@protoc_insertion_point(message_clear_start:QA_Market_order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sending_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transact_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strategy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trade_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&towards_) -
      reinterpret_cast<char*>(&price_)) + sizeof(towards_));
  _internal_metadata_.Clear();
}

bool QA_Market_order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QA_Market_order)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float price = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string date = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->date().data(), static_cast<int>(this->date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QA_Market_order.date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string datetime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_datetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->datetime().data(), static_cast<int>(this->datetime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QA_Market_order.datetime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sending_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sending_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sending_time().data(), static_cast<int>(this->sending_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QA_Market_order.sending_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string transact_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transact_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transact_time().data(), static_cast<int>(this->transact_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QA_Market_order.transact_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float amount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 towards = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &towards_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QA_Market_order.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QA_Market_order.user"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strategy = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strategy()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strategy().data(), static_cast<int>(this->strategy().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QA_Market_order.strategy"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QA_Market_order.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string order_model = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_model().data(), static_cast<int>(this->order_model().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QA_Market_order.order_model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string amount_model = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amount_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->amount_model().data(), static_cast<int>(this->amount_model().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QA_Market_order.amount_model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string order_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_id().data(), static_cast<int>(this->order_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QA_Market_order.order_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trade_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trade_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trade_id().data(), static_cast<int>(this->trade_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QA_Market_order.trade_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QA_Market_order.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QA_Market_order)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QA_Market_order)
  return false;
#undef DO_
}

void QA_Market_order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QA_Market_order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float price = 1;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->price(), output);
  }

  // string date = 2;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->date(), output);
  }

  // string datetime = 3;
  if (this->datetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->datetime().data(), static_cast<int>(this->datetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.datetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->datetime(), output);
  }

  // string sending_time = 4;
  if (this->sending_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sending_time().data(), static_cast<int>(this->sending_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.sending_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sending_time(), output);
  }

  // string transact_time = 5;
  if (this->transact_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transact_time().data(), static_cast<int>(this->transact_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.transact_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->transact_time(), output);
  }

  // float amount = 6;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->amount(), output);
  }

  // int64 towards = 7;
  if (this->towards() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->towards(), output);
  }

  // string code = 8;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->code(), output);
  }

  // string user = 9;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->user(), output);
  }

  // string strategy = 10;
  if (this->strategy().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strategy().data(), static_cast<int>(this->strategy().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.strategy");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->strategy(), output);
  }

  // string type = 11;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->type(), output);
  }

  // string order_model = 12;
  if (this->order_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_model().data(), static_cast<int>(this->order_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.order_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->order_model(), output);
  }

  // string amount_model = 13;
  if (this->amount_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount_model().data(), static_cast<int>(this->amount_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.amount_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->amount_model(), output);
  }

  // string order_id = 14;
  if (this->order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_id().data(), static_cast<int>(this->order_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.order_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->order_id(), output);
  }

  // string trade_id = 15;
  if (this->trade_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trade_id().data(), static_cast<int>(this->trade_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.trade_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->trade_id(), output);
  }

  // string status = 16;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:QA_Market_order)
}

::google::protobuf::uint8* QA_Market_order::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QA_Market_order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float price = 1;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->price(), target);
  }

  // string date = 2;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->date(), target);
  }

  // string datetime = 3;
  if (this->datetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->datetime().data(), static_cast<int>(this->datetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.datetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->datetime(), target);
  }

  // string sending_time = 4;
  if (this->sending_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sending_time().data(), static_cast<int>(this->sending_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.sending_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sending_time(), target);
  }

  // string transact_time = 5;
  if (this->transact_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transact_time().data(), static_cast<int>(this->transact_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.transact_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->transact_time(), target);
  }

  // float amount = 6;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->amount(), target);
  }

  // int64 towards = 7;
  if (this->towards() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->towards(), target);
  }

  // string code = 8;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->code(), target);
  }

  // string user = 9;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->user(), target);
  }

  // string strategy = 10;
  if (this->strategy().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strategy().data(), static_cast<int>(this->strategy().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.strategy");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strategy(), target);
  }

  // string type = 11;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->type(), target);
  }

  // string order_model = 12;
  if (this->order_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_model().data(), static_cast<int>(this->order_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.order_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->order_model(), target);
  }

  // string amount_model = 13;
  if (this->amount_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount_model().data(), static_cast<int>(this->amount_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.amount_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->amount_model(), target);
  }

  // string order_id = 14;
  if (this->order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_id().data(), static_cast<int>(this->order_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.order_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->order_id(), target);
  }

  // string trade_id = 15;
  if (this->trade_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trade_id().data(), static_cast<int>(this->trade_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.trade_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->trade_id(), target);
  }

  // string status = 16;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QA_Market_order.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QA_Market_order)
  return target;
}

size_t QA_Market_order::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QA_Market_order)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string date = 2;
  if (this->date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->date());
  }

  // string datetime = 3;
  if (this->datetime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->datetime());
  }

  // string sending_time = 4;
  if (this->sending_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sending_time());
  }

  // string transact_time = 5;
  if (this->transact_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transact_time());
  }

  // string code = 8;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string user = 9;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  // string strategy = 10;
  if (this->strategy().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strategy());
  }

  // string type = 11;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string order_model = 12;
  if (this->order_model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_model());
  }

  // string amount_model = 13;
  if (this->amount_model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->amount_model());
  }

  // string order_id = 14;
  if (this->order_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_id());
  }

  // string trade_id = 15;
  if (this->trade_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trade_id());
  }

  // string status = 16;
  if (this->status().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  // float price = 1;
  if (this->price() != 0) {
    total_size += 1 + 4;
  }

  // float amount = 6;
  if (this->amount() != 0) {
    total_size += 1 + 4;
  }

  // int64 towards = 7;
  if (this->towards() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->towards());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QA_Market_order::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QA_Market_order)
  GOOGLE_DCHECK_NE(&from, this);
  const QA_Market_order* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QA_Market_order>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QA_Market_order)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QA_Market_order)
    MergeFrom(*source);
  }
}

void QA_Market_order::MergeFrom(const QA_Market_order& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QA_Market_order)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.date().size() > 0) {

    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  if (from.datetime().size() > 0) {

    datetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datetime_);
  }
  if (from.sending_time().size() > 0) {

    sending_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sending_time_);
  }
  if (from.transact_time().size() > 0) {

    transact_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transact_time_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  if (from.strategy().size() > 0) {

    strategy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strategy_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.order_model().size() > 0) {

    order_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_model_);
  }
  if (from.amount_model().size() > 0) {

    amount_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_model_);
  }
  if (from.order_id().size() > 0) {

    order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_id_);
  }
  if (from.trade_id().size() > 0) {

    trade_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trade_id_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.towards() != 0) {
    set_towards(from.towards());
  }
}

void QA_Market_order::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QA_Market_order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QA_Market_order::CopyFrom(const QA_Market_order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QA_Market_order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QA_Market_order::IsInitialized() const {
  return true;
}

void QA_Market_order::Swap(QA_Market_order* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QA_Market_order::InternalSwap(QA_Market_order* other) {
  using std::swap;
  date_.Swap(&other->date_);
  datetime_.Swap(&other->datetime_);
  sending_time_.Swap(&other->sending_time_);
  transact_time_.Swap(&other->transact_time_);
  code_.Swap(&other->code_);
  user_.Swap(&other->user_);
  strategy_.Swap(&other->strategy_);
  type_.Swap(&other->type_);
  order_model_.Swap(&other->order_model_);
  amount_model_.Swap(&other->amount_model_);
  order_id_.Swap(&other->order_id_);
  trade_id_.Swap(&other->trade_id_);
  status_.Swap(&other->status_);
  swap(price_, other->price_);
  swap(amount_, other->amount_);
  swap(towards_, other->towards_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QA_Market_order::GetMetadata() const {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QA_Market_order

// float price = 1;
void QA_Market_order::clear_price() {
  price_ = 0;
}
float QA_Market_order::price() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.price)
  return price_;
}
void QA_Market_order::set_price(float value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:QA_Market_order.price)
}

// string date = 2;
void QA_Market_order::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QA_Market_order::date() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.date)
  return date_.GetNoArena();
}
void QA_Market_order::set_date(const ::std::string& value) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QA_Market_order.date)
}
#if LANG_CXX11
void QA_Market_order::set_date(::std::string&& value) {
  
  date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QA_Market_order.date)
}
#endif
void QA_Market_order::set_date(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QA_Market_order.date)
}
void QA_Market_order::set_date(const char* value, size_t size) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QA_Market_order.date)
}
::std::string* QA_Market_order::mutable_date() {
  
  // @@protoc_insertion_point(field_mutable:QA_Market_order.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QA_Market_order::release_date() {
  // @@protoc_insertion_point(field_release:QA_Market_order.date)
  
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QA_Market_order::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    
  } else {
    
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:QA_Market_order.date)
}

// string datetime = 3;
void QA_Market_order::clear_datetime() {
  datetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QA_Market_order::datetime() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.datetime)
  return datetime_.GetNoArena();
}
void QA_Market_order::set_datetime(const ::std::string& value) {
  
  datetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QA_Market_order.datetime)
}
#if LANG_CXX11
void QA_Market_order::set_datetime(::std::string&& value) {
  
  datetime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QA_Market_order.datetime)
}
#endif
void QA_Market_order::set_datetime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  datetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QA_Market_order.datetime)
}
void QA_Market_order::set_datetime(const char* value, size_t size) {
  
  datetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QA_Market_order.datetime)
}
::std::string* QA_Market_order::mutable_datetime() {
  
  // @@protoc_insertion_point(field_mutable:QA_Market_order.datetime)
  return datetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QA_Market_order::release_datetime() {
  // @@protoc_insertion_point(field_release:QA_Market_order.datetime)
  
  return datetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QA_Market_order::set_allocated_datetime(::std::string* datetime) {
  if (datetime != NULL) {
    
  } else {
    
  }
  datetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datetime);
  // @@protoc_insertion_point(field_set_allocated:QA_Market_order.datetime)
}

// string sending_time = 4;
void QA_Market_order::clear_sending_time() {
  sending_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QA_Market_order::sending_time() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.sending_time)
  return sending_time_.GetNoArena();
}
void QA_Market_order::set_sending_time(const ::std::string& value) {
  
  sending_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QA_Market_order.sending_time)
}
#if LANG_CXX11
void QA_Market_order::set_sending_time(::std::string&& value) {
  
  sending_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QA_Market_order.sending_time)
}
#endif
void QA_Market_order::set_sending_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sending_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QA_Market_order.sending_time)
}
void QA_Market_order::set_sending_time(const char* value, size_t size) {
  
  sending_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QA_Market_order.sending_time)
}
::std::string* QA_Market_order::mutable_sending_time() {
  
  // @@protoc_insertion_point(field_mutable:QA_Market_order.sending_time)
  return sending_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QA_Market_order::release_sending_time() {
  // @@protoc_insertion_point(field_release:QA_Market_order.sending_time)
  
  return sending_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QA_Market_order::set_allocated_sending_time(::std::string* sending_time) {
  if (sending_time != NULL) {
    
  } else {
    
  }
  sending_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sending_time);
  // @@protoc_insertion_point(field_set_allocated:QA_Market_order.sending_time)
}

// string transact_time = 5;
void QA_Market_order::clear_transact_time() {
  transact_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QA_Market_order::transact_time() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.transact_time)
  return transact_time_.GetNoArena();
}
void QA_Market_order::set_transact_time(const ::std::string& value) {
  
  transact_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QA_Market_order.transact_time)
}
#if LANG_CXX11
void QA_Market_order::set_transact_time(::std::string&& value) {
  
  transact_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QA_Market_order.transact_time)
}
#endif
void QA_Market_order::set_transact_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  transact_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QA_Market_order.transact_time)
}
void QA_Market_order::set_transact_time(const char* value, size_t size) {
  
  transact_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QA_Market_order.transact_time)
}
::std::string* QA_Market_order::mutable_transact_time() {
  
  // @@protoc_insertion_point(field_mutable:QA_Market_order.transact_time)
  return transact_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QA_Market_order::release_transact_time() {
  // @@protoc_insertion_point(field_release:QA_Market_order.transact_time)
  
  return transact_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QA_Market_order::set_allocated_transact_time(::std::string* transact_time) {
  if (transact_time != NULL) {
    
  } else {
    
  }
  transact_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transact_time);
  // @@protoc_insertion_point(field_set_allocated:QA_Market_order.transact_time)
}

// float amount = 6;
void QA_Market_order::clear_amount() {
  amount_ = 0;
}
float QA_Market_order::amount() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.amount)
  return amount_;
}
void QA_Market_order::set_amount(float value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:QA_Market_order.amount)
}

// int64 towards = 7;
void QA_Market_order::clear_towards() {
  towards_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 QA_Market_order::towards() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.towards)
  return towards_;
}
void QA_Market_order::set_towards(::google::protobuf::int64 value) {
  
  towards_ = value;
  // @@protoc_insertion_point(field_set:QA_Market_order.towards)
}

// string code = 8;
void QA_Market_order::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QA_Market_order::code() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.code)
  return code_.GetNoArena();
}
void QA_Market_order::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QA_Market_order.code)
}
#if LANG_CXX11
void QA_Market_order::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QA_Market_order.code)
}
#endif
void QA_Market_order::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QA_Market_order.code)
}
void QA_Market_order::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QA_Market_order.code)
}
::std::string* QA_Market_order::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:QA_Market_order.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QA_Market_order::release_code() {
  // @@protoc_insertion_point(field_release:QA_Market_order.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QA_Market_order::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:QA_Market_order.code)
}

// string user = 9;
void QA_Market_order::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QA_Market_order::user() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.user)
  return user_.GetNoArena();
}
void QA_Market_order::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QA_Market_order.user)
}
#if LANG_CXX11
void QA_Market_order::set_user(::std::string&& value) {
  
  user_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QA_Market_order.user)
}
#endif
void QA_Market_order::set_user(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QA_Market_order.user)
}
void QA_Market_order::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QA_Market_order.user)
}
::std::string* QA_Market_order::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:QA_Market_order.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QA_Market_order::release_user() {
  // @@protoc_insertion_point(field_release:QA_Market_order.user)
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QA_Market_order::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:QA_Market_order.user)
}

// string strategy = 10;
void QA_Market_order::clear_strategy() {
  strategy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QA_Market_order::strategy() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.strategy)
  return strategy_.GetNoArena();
}
void QA_Market_order::set_strategy(const ::std::string& value) {
  
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QA_Market_order.strategy)
}
#if LANG_CXX11
void QA_Market_order::set_strategy(::std::string&& value) {
  
  strategy_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QA_Market_order.strategy)
}
#endif
void QA_Market_order::set_strategy(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QA_Market_order.strategy)
}
void QA_Market_order::set_strategy(const char* value, size_t size) {
  
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QA_Market_order.strategy)
}
::std::string* QA_Market_order::mutable_strategy() {
  
  // @@protoc_insertion_point(field_mutable:QA_Market_order.strategy)
  return strategy_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QA_Market_order::release_strategy() {
  // @@protoc_insertion_point(field_release:QA_Market_order.strategy)
  
  return strategy_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QA_Market_order::set_allocated_strategy(::std::string* strategy) {
  if (strategy != NULL) {
    
  } else {
    
  }
  strategy_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strategy);
  // @@protoc_insertion_point(field_set_allocated:QA_Market_order.strategy)
}

// string type = 11;
void QA_Market_order::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QA_Market_order::type() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.type)
  return type_.GetNoArena();
}
void QA_Market_order::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QA_Market_order.type)
}
#if LANG_CXX11
void QA_Market_order::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QA_Market_order.type)
}
#endif
void QA_Market_order::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QA_Market_order.type)
}
void QA_Market_order::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QA_Market_order.type)
}
::std::string* QA_Market_order::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:QA_Market_order.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QA_Market_order::release_type() {
  // @@protoc_insertion_point(field_release:QA_Market_order.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QA_Market_order::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:QA_Market_order.type)
}

// string order_model = 12;
void QA_Market_order::clear_order_model() {
  order_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QA_Market_order::order_model() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.order_model)
  return order_model_.GetNoArena();
}
void QA_Market_order::set_order_model(const ::std::string& value) {
  
  order_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QA_Market_order.order_model)
}
#if LANG_CXX11
void QA_Market_order::set_order_model(::std::string&& value) {
  
  order_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QA_Market_order.order_model)
}
#endif
void QA_Market_order::set_order_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QA_Market_order.order_model)
}
void QA_Market_order::set_order_model(const char* value, size_t size) {
  
  order_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QA_Market_order.order_model)
}
::std::string* QA_Market_order::mutable_order_model() {
  
  // @@protoc_insertion_point(field_mutable:QA_Market_order.order_model)
  return order_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QA_Market_order::release_order_model() {
  // @@protoc_insertion_point(field_release:QA_Market_order.order_model)
  
  return order_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QA_Market_order::set_allocated_order_model(::std::string* order_model) {
  if (order_model != NULL) {
    
  } else {
    
  }
  order_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_model);
  // @@protoc_insertion_point(field_set_allocated:QA_Market_order.order_model)
}

// string amount_model = 13;
void QA_Market_order::clear_amount_model() {
  amount_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QA_Market_order::amount_model() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.amount_model)
  return amount_model_.GetNoArena();
}
void QA_Market_order::set_amount_model(const ::std::string& value) {
  
  amount_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QA_Market_order.amount_model)
}
#if LANG_CXX11
void QA_Market_order::set_amount_model(::std::string&& value) {
  
  amount_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QA_Market_order.amount_model)
}
#endif
void QA_Market_order::set_amount_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  amount_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QA_Market_order.amount_model)
}
void QA_Market_order::set_amount_model(const char* value, size_t size) {
  
  amount_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QA_Market_order.amount_model)
}
::std::string* QA_Market_order::mutable_amount_model() {
  
  // @@protoc_insertion_point(field_mutable:QA_Market_order.amount_model)
  return amount_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QA_Market_order::release_amount_model() {
  // @@protoc_insertion_point(field_release:QA_Market_order.amount_model)
  
  return amount_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QA_Market_order::set_allocated_amount_model(::std::string* amount_model) {
  if (amount_model != NULL) {
    
  } else {
    
  }
  amount_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), amount_model);
  // @@protoc_insertion_point(field_set_allocated:QA_Market_order.amount_model)
}

// string order_id = 14;
void QA_Market_order::clear_order_id() {
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QA_Market_order::order_id() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.order_id)
  return order_id_.GetNoArena();
}
void QA_Market_order::set_order_id(const ::std::string& value) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QA_Market_order.order_id)
}
#if LANG_CXX11
void QA_Market_order::set_order_id(::std::string&& value) {
  
  order_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QA_Market_order.order_id)
}
#endif
void QA_Market_order::set_order_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QA_Market_order.order_id)
}
void QA_Market_order::set_order_id(const char* value, size_t size) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QA_Market_order.order_id)
}
::std::string* QA_Market_order::mutable_order_id() {
  
  // @@protoc_insertion_point(field_mutable:QA_Market_order.order_id)
  return order_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QA_Market_order::release_order_id() {
  // @@protoc_insertion_point(field_release:QA_Market_order.order_id)
  
  return order_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QA_Market_order::set_allocated_order_id(::std::string* order_id) {
  if (order_id != NULL) {
    
  } else {
    
  }
  order_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_id);
  // @@protoc_insertion_point(field_set_allocated:QA_Market_order.order_id)
}

// string trade_id = 15;
void QA_Market_order::clear_trade_id() {
  trade_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QA_Market_order::trade_id() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.trade_id)
  return trade_id_.GetNoArena();
}
void QA_Market_order::set_trade_id(const ::std::string& value) {
  
  trade_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QA_Market_order.trade_id)
}
#if LANG_CXX11
void QA_Market_order::set_trade_id(::std::string&& value) {
  
  trade_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QA_Market_order.trade_id)
}
#endif
void QA_Market_order::set_trade_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trade_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QA_Market_order.trade_id)
}
void QA_Market_order::set_trade_id(const char* value, size_t size) {
  
  trade_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QA_Market_order.trade_id)
}
::std::string* QA_Market_order::mutable_trade_id() {
  
  // @@protoc_insertion_point(field_mutable:QA_Market_order.trade_id)
  return trade_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QA_Market_order::release_trade_id() {
  // @@protoc_insertion_point(field_release:QA_Market_order.trade_id)
  
  return trade_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QA_Market_order::set_allocated_trade_id(::std::string* trade_id) {
  if (trade_id != NULL) {
    
  } else {
    
  }
  trade_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trade_id);
  // @@protoc_insertion_point(field_set_allocated:QA_Market_order.trade_id)
}

// string status = 16;
void QA_Market_order::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QA_Market_order::status() const {
  // @@protoc_insertion_point(field_get:QA_Market_order.status)
  return status_.GetNoArena();
}
void QA_Market_order::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QA_Market_order.status)
}
#if LANG_CXX11
void QA_Market_order::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QA_Market_order.status)
}
#endif
void QA_Market_order::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QA_Market_order.status)
}
void QA_Market_order::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QA_Market_order.status)
}
::std::string* QA_Market_order::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:QA_Market_order.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QA_Market_order::release_status() {
  // @@protoc_insertion_point(field_release:QA_Market_order.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QA_Market_order::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:QA_Market_order.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
